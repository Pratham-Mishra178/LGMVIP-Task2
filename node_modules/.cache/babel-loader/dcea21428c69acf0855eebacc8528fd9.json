{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pratham\\\\Desktop\\\\ReactApiDataFetch-main\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport Navbar from '../components/Navigation/Navigation';\nimport Loader from './loader';\nimport './styles.css';\nimport { FcSearch } from \"react-icons/fc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(); //defining the states\n\n    this.onButtonSubmit = () => {\n      //changes the state of the button is clicked\n      this.setState({\n        isButtonClicked: !this.isButtonClicked\n      });\n      const timer = setTimeout(() => {\n        //fetches the api which is provided in letsgrowmore\n        fetch('https://reqres.in/api/users?page=1').then(response => {\n          return response.json();\n        }).then(users => {\n          this.setState({\n            robots: users.data\n          });\n        });\n      }, 3000);\n      return () => clearTimeout(timer);\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfeild: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfeild: '',\n      isButtonClicked: false\n    };\n  } //function when the button is clicked .\n  //it fetches the api\n  //and stores in robots\n\n\n  render() {\n    //used to filter the robots bt their first name\n    const filteredRobots = this.state.robots.filter(robots => {\n      return robots.first_name.toLowerCase().includes(this.state.searchfeild.toLowerCase());\n    }); //at the starting\n    //when the user has not clicked the button\n    //and the api is not fetched\n\n    if (this.state.robots.length === 0 && this.state.isButtonClicked === false) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"click\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"term\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"but1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"but2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"but3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"tc\",\n            children: \"Please click on get clients to get all details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } //when the button is clicked and the api is being called\n    //but no data is fetched\n    else if (this.state.robots.length === 0) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {\n            onButtonSubmit: this.onButtonSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"tc\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Loader, {\n            className: \"loader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true);\n      } //when the button is clicked and the api has fetched data\n      else {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar, {\n              onButtonSubmit: this.onButtonSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tc\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\"Search \", /*#__PURE__*/_jsxDEV(FcSearch, {\n                  size: \"30px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n                searchChange: this.onSearchChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n                children: /*#__PURE__*/_jsxDEV(CardList, {\n                  robots: filteredRobots\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true);\n        }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/pratham/Desktop/ReactApiDataFetch-main/src/containers/App.js"],"names":["React","Component","SearchBox","CardList","Scroll","Navbar","Loader","FcSearch","App","constructor","onButtonSubmit","setState","isButtonClicked","timer","setTimeout","fetch","then","response","json","users","robots","data","clearTimeout","onSearchChange","event","searchfeild","target","value","state","render","filteredRobots","filter","first_name","toLowerCase","includes","length"],"mappings":"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","sourcesContent":["    import React, {Component}  from 'react';\n    import SearchBox from '../components/SearchBox';\n    import CardList from '../components/CardList';\n    import Scroll from '../components/Scroll';\n    import Navbar from '../components/Navigation/Navigation';\n    import Loader from './loader';\n    import './styles.css';\n    import { FcSearch } from \"react-icons/fc\";\n\n    class App extends Component{\n\n        constructor(){\n            super()\n            //defining the states\n            this.state={\n                robots: [],\n                searchfeild: '',\n                isButtonClicked: false\n            }\n        }\n\n        //function when the button is clicked .\n        //it fetches the api\n        //and stores in robots\n        onButtonSubmit = () => {\n            //changes the state of the button is clicked\n            this.setState({isButtonClicked: !this.isButtonClicked})\n            const timer = setTimeout(() => {\n                //fetches the api which is provided in letsgrowmore\n                fetch('https://reqres.in/api/users?page=1').then(response=> {\n                return response.json();\n                })\n                .then(users=>{\n                    this.setState({robots: users.data})\n                });\n            }, 3000);\n            return () =>clearTimeout(timer);\n        }\n\n        //function used to change the searchfield\n        onSearchChange = (event) => {\n            this.setState({searchfeild: event.target.value})\n        }\n\n        render(){\n\n            //used to filter the robots bt their first name\n            const filteredRobots = this.state.robots.filter(robots=>{\n                return robots.first_name.toLowerCase().includes(this.state.searchfeild.toLowerCase());\n            })\n\n            //at the starting\n            //when the user has not clicked the button\n            //and the api is not fetched\n            if(this.state.robots.length === 0 && this.state.isButtonClicked === false){\n                return (\n                <>\n                    <Navbar onButtonSubmit={this.onButtonSubmit}/>\n                    <div class=\"click\">\n                        <div class=\"term\">\n                            <button class=\"but1\"></button>\n                            <button class=\"but2\"></button>\n                            <button class=\"but3\"></button>\n                        </div>\n                        <h1 className='tc'>Please click on get clients to get all details</h1>\n                    </div>\n                    \n                    \n                </>\n                );\n\n            }\n\n            //when the button is clicked and the api is being called\n            //but no data is fetched\n            else if(this.state.robots.length === 0){\n                return (\n                    <>\n                    <Navbar onButtonSubmit={this.onButtonSubmit}/>\n                    <h1 className='tc'>Loading...</h1>\n                    <Loader className='loader'></Loader>\n                    </>\n                );\n            }\n\n            //when the button is clicked and the api has fetched data\n            else{\n                return(\n                    <>\n                    <Navbar onButtonSubmit={this.onButtonSubmit}/>\n                    <div className='tc'>\n                        <h1>Search <FcSearch size=\"30px\" /></h1>\n                        <SearchBox searchChange={this.onSearchChange}/>\n                        <Scroll>\n                            <CardList robots={filteredRobots}/>\n                        </Scroll>\n\n                    </div>\n                    </>\n                );\n            }\n\n        }\n\n    }\n\n    export default App;\n"]},"metadata":{},"sourceType":"module"}